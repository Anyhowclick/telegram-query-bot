const logger = require('../logger');
const collectedFeesInTwei = require('./collectedFeesInTwei');
const convert = require('./convert');
const debugReserve = require('./debugReserve');
const getConversionRate = require('./getConversionRate');
const getExpectedRate = require('./getExpectedRate');
const feePayedPerReserve = require('./feePayedPerReserve');
const getReservesRates = require('./getReservesRates');
const isFeeSharingWallet = require('./isFeeSharingWallet');
const isReserveListed = require('./isReserveListed');
const latestBlock = require('./latestBlock');
const liquidityParams = require('./liquidityParams');
const liquidityRate = require('./liquidityRate');
const reserveBalances = require('./reserveBalances');
const reserveContracts = require('./reserveContracts');
const reserveFeesInBps = require('./reserveFeesInBps');
const reserveIndex = require('./reserveIndex');
const reserveKNCWallet = require('./reserveKNCWallet');
const reservesOfToken = require('./reservesOfToken');
const tokenAddress = require('./tokenAddress');
const tokensOfReserve = require('./tokensOfReserve');
const update = require('./update');
const whois = require('./whois');

module.exports = app => {
  app.command('convert', convert());
  app.command('debugreserve', debugReserve());
  app.command('debugReserve', debugReserve());
  app.command('collectedfeesintwei', collectedFeesInTwei());
  app.command('collectedFeesInTwei', collectedFeesInTwei());
  app.command('getconversionrate', getConversionRate());
  app.command('getConversionRate', getConversionRate());
  app.command('getexpectedrate', getExpectedRate());
  app.command('getExpectedRate', getExpectedRate());
  app.command('getreservesrates', getReservesRates());
  app.command('getReservesRates', getReservesRates());
  app.command('feepayedperreserve', feePayedPerReserve());
  app.command('feePayedPerReserve', feePayedPerReserve());
  app.command('isfeesharingwallet', isFeeSharingWallet());
  app.command('isFeeSharingWallet', isFeeSharingWallet());
  app.command('isreservelisted', isReserveListed());
  app.command('isReserveListed', isReserveListed());
  app.command('latestblock', latestBlock());
  app.command('latestBlock', latestBlock());
  app.command('liquidityparams', liquidityParams());
  app.command('liquidityParams', liquidityParams());
  app.command('liquidityrate', liquidityRate());
  app.command('liquidityRate', liquidityRate());
  app.command('rates', getReservesRates());
  app.command('reservebalances', reserveBalances());
  app.command('reserveBalances', reserveBalances());
  app.command('reservecontracts', reserveContracts());
  app.command('reserveContracts', reserveContracts());
  app.command('reservefeesinbps', reserveFeesInBps());
  app.command('reserveFeesInBps', reserveFeesInBps());
  app.command('reserveindex', reserveIndex());
  app.command('reserveIndex', reserveIndex());
  app.command('reservekncwallet', reserveKNCWallet());
  app.command('reserveKNCWallet', reserveKNCWallet());
  app.command('reservesoftoken', reservesOfToken());
  app.command('reservesOfToken', reservesOfToken());
  app.command('tokenaddress', tokenAddress());
  app.command('tokenAddress', tokenAddress());
  app.command('tokensofreserve', tokensOfReserve());
  app.command('tokensOfReserve', tokensOfReserve());
  app.command('update', update());
  app.command('whois', whois());

  logger.info('Initialized commands');
};
